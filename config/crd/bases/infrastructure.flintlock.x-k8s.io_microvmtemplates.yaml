---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.9.2
  creationTimestamp: null
  name: microvmtemplates.infrastructure.flintlock.x-k8s.io
spec:
  group: infrastructure.flintlock.x-k8s.io
  names:
    kind: MicrovmTemplate
    listKind: MicrovmTemplateList
    plural: microvmtemplates
    singular: microvmtemplate
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: MicrovmTemplate is the Schema for the microvmtemplates API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          template:
            description: Template defines the Microvm that will be created from this
              pod template.
            properties:
              metadata:
                type: object
              spec:
                description: Specification of the desired behavior of the Microvm.
                properties:
                  host:
                    description: Host sets the host device address for Microvm creation.
                    properties:
                      basicAuthSecret:
                        description: "BasicAuthSecret is the name of the secret containing
                          basic auth info for the host The secret should be created
                          in the same namespace as the MicroVM. \n apiVersion: v1
                          kind: Secret metadata: name: mybasicauthsecret namespace:
                          same-as-microvm type: Opaque data: token: YWRtaW4="
                        type: string
                      endpoint:
                        description: Endpoint is the API endpoint for the microvm
                          service (i.e. flintlock) including the port.
                        type: string
                      name:
                        description: Name is an optional name for the host.
                        type: string
                    required:
                    - endpoint
                    type: object
                  initrd:
                    description: Initrd is an optional initial ramdisk to use.
                    properties:
                      filename:
                        description: Filename is the name of the file in the container
                          to use.
                        type: string
                      image:
                        description: Image is the container image to use.
                        type: string
                    required:
                    - image
                    type: object
                  kernel:
                    description: Kernel specifies the kernel and its arguments to
                      use.
                    properties:
                      filename:
                        description: Filename is the name of the file in the container
                          to use.
                        type: string
                      image:
                        description: Image is the container image to use.
                        type: string
                    required:
                    - image
                    type: object
                  kernelCmdline:
                    additionalProperties:
                      type: string
                    description: KernelCmdLine are the additional args to use for
                      the kernel cmdline. Each MicroVM provider has its own recommended
                      list, they will be used automatically. This field is for additional
                      values.
                    type: object
                  labels:
                    additionalProperties:
                      type: string
                    description: Labels allow you to include extra data on the Microvm
                    type: object
                  memoryMb:
                    description: MemoryMb is the amount of memory in megabytes that
                      the microvm will be allocated.
                    format: int64
                    minimum: 1024
                    type: integer
                  microvmProxy:
                    description: MicrovmProxy is the proxy server details to use when
                      calling the microvm service. This is an alternative to using
                      the http proxy environment variables and applied purely to the
                      grpc service.
                    properties:
                      endpoint:
                        description: Endpoint is the address of the proxy.
                        type: string
                    required:
                    - endpoint
                    type: object
                  networkInterfaces:
                    description: NetworkInterfaces specifies the network interfaces
                      attached to the microvm.
                    items:
                      description: NetworkInterface represents a network interface
                        for the microvm.
                      properties:
                        address:
                          description: Address is an optional IP address to assign
                            to this interface. If not supplied then DHCP will be used.
                          type: string
                        guestDeviceName:
                          description: GuestDeviceName is the name of the network
                            interface to create in the microvm.
                          type: string
                        guestMac:
                          description: GuestMAC allows the specifying of a specific
                            MAC address to use for the interface. If not supplied
                            a autogenerated MAC address will be used.
                          type: string
                        type:
                          description: Type is the type of host network interface
                            type to create to use by the guest.
                          enum:
                          - macvtap
                          - tap
                          type: string
                      required:
                      - guestDeviceName
                      - type
                      type: object
                    minItems: 1
                    type: array
                  providerID:
                    description: ProviderID is the unique identifier as specified
                      by the cloud provider.
                    type: string
                  rootVolume:
                    description: RootVolume specifies the volume to use for the root
                      of the microvm.
                    properties:
                      id:
                        description: ID is a unique identifier for this volume.
                        type: string
                      image:
                        description: Image is the container image to use for the volume.
                        type: string
                      readOnly:
                        default: false
                        description: ReadOnly specifies that the volume is to be mounted
                          readonly.
                        type: boolean
                    required:
                    - id
                    - image
                    type: object
                  sshPublicKeys:
                    description: SSHPublicKeys is list of SSH public keys which will
                      be added to the Microvm.
                    items:
                      properties:
                        authorizedKeys:
                          description: AuthorizedKeys is a list of public keys to
                            add to the user
                          items:
                            type: string
                          type: array
                        user:
                          description: User is the name of the user to add keys for
                            (eg root, ubuntu).
                          type: string
                      type: object
                    type: array
                  tlsSecretRef:
                    description: "mTLS Configuration: \n It is recommended that each
                      flintlock host is configured with its own cert signed by a common
                      CA, and set to use mTLS. The flintlock-operator should be provided
                      with the CA, and a client cert and key signed by that CA. TLSSecretRef
                      is a reference to the name of a secret which contains TLS cert
                      information for connecting to Flintlock hosts. The secret should
                      be created in the same namespace as the MicroVMCluster. The
                      secret should be of type Opaque with the addition of a ca.crt
                      key. \n apiVersion: v1 kind: Secret metadata: name: secret-tls
                      namespace: default  <- same as Cluster type: Opaque data: tls.crt:
                      | -----BEGIN CERTIFICATE----- MIIC2DCCAcCgAwIBAgIBATANBgkqh
                      ... -----END CERTIFICATE----- tls.key: | -----BEGIN EC PRIVATE
                      KEY----- MIIEpgIBAAKCAQEA7yn3bRHQ5FHMQ ... -----END EC PRIVATE
                      KEY----- ca.crt: | -----BEGIN CERTIFICATE----- MIIEpgIBAAKCAQEA7yn3bRHQ5FHMQ
                      ... -----END CERTIFICATE-----"
                    type: string
                  userdata:
                    description: "UserData is additional userdata script to execute
                      in the Microvm's cloud init. This can be in the form of a raw
                      shell script, eg: userdata: | #!/bin/bash echo \"hi from my
                      microvm\" \n or in valid cloud-config, eg: userdata: | #cloud-config
                      write_files: - content: \"hello\" path: \"/root/FINDME\" owner:
                      \"root:root\" permissions: \"0755\""
                    type: string
                  vcpu:
                    description: VCPU specifies how many vcpu's the microvm will be
                      allocated.
                    format: int64
                    minimum: 1
                    type: integer
                  volumes:
                    description: AdditionalVolumes specifies additional non-root volumes
                      to attach to the microvm.
                    items:
                      description: Volume represents a volume to be attached to a
                        microvm.
                      properties:
                        id:
                          description: ID is a unique identifier for this volume.
                          type: string
                        image:
                          description: Image is the container image to use for the
                            volume.
                          type: string
                        readOnly:
                          default: false
                          description: ReadOnly specifies that the volume is to be
                            mounted readonly.
                          type: boolean
                      required:
                      - id
                      - image
                      type: object
                    type: array
                required:
                - host
                - kernel
                - memoryMb
                - networkInterfaces
                - rootVolume
                - vcpu
                type: object
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
