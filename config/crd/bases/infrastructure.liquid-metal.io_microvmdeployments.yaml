---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.9.2
  creationTimestamp: null
  name: microvmdeployments.infrastructure.liquid-metal.io
spec:
  group: infrastructure.liquid-metal.io
  names:
    kind: MicrovmDeployment
    listKind: MicrovmDeploymentList
    plural: microvmdeployments
    singular: microvmdeployment
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: MicrovmDeployment is the Schema for the microvmdeployments API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: MicrovmDeploymentSpec defines the desired state of MicrovmDeployment
            properties:
              hosts:
                description: Host sets the host device address for Microvm creation.
                items:
                  properties:
                    endpoint:
                      description: Endpoint is the API endpoint for the microvm service
                        (i.e. flintlock) including the port.
                      type: string
                    name:
                      description: Name is an optional name for the host.
                      type: string
                  required:
                  - endpoint
                  type: object
                type: array
              replicas:
                default: 1
                description: Replicas is the number of Microvms to create on the given
                  Host with the given Microvm spec
                format: int32
                type: integer
              template:
                description: 'Template is the object that describes the Microvm that
                  will be created if insufficient replicas are detected. More info:
                  https://kubernetes.io/docs/concepts/workloads/controllers/replicationcontroller#pod-template'
                properties:
                  metadata:
                    type: object
                  spec:
                    description: Specification of the desired behavior of the Microvm.
                    properties:
                      basicAuthSecret:
                        description: "TODO this needs to go and be pulled off the
                          owning object probably needs to be part of Hosts once that
                          becomes an array BasicAuthSecret is the name of the secret
                          containing basic auth info for the host The secret should
                          be created in the same namespace as the MicroVM. \n apiVersion:
                          v1 kind: Secret metadata: name: mybasicauthsecret namespace:
                          same-as-microvm type: Opaque data: token: YWRtaW4="
                        type: string
                      host:
                        description: Host sets the host device address for Microvm
                          creation.
                        properties:
                          endpoint:
                            description: Endpoint is the API endpoint for the microvm
                              service (i.e. flintlock) including the port.
                            type: string
                          name:
                            description: Name is an optional name for the host.
                            type: string
                        required:
                        - endpoint
                        type: object
                      initrd:
                        description: Initrd is an optional initial ramdisk to use.
                        properties:
                          filename:
                            description: Filename is the name of the file in the container
                              to use.
                            type: string
                          image:
                            description: Image is the container image to use.
                            type: string
                        required:
                        - image
                        type: object
                      kernel:
                        description: Kernel specifies the kernel and its arguments
                          to use.
                        properties:
                          filename:
                            description: Filename is the name of the file in the container
                              to use.
                            type: string
                          image:
                            description: Image is the container image to use.
                            type: string
                        required:
                        - image
                        type: object
                      kernelCmdline:
                        additionalProperties:
                          type: string
                        description: KernelCmdLine are the additional args to use
                          for the kernel cmdline. Each MicroVM provider has its own
                          recommended list, they will be used automatically. This
                          field is for additional values.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: Labels allow you to include extra data on the
                          Microvm
                        type: object
                      memoryMb:
                        description: MemoryMb is the amount of memory in megabytes
                          that the microvm will be allocated.
                        format: int64
                        minimum: 1024
                        type: integer
                      microvmProxy:
                        description: MicrovmProxy is the proxy server details to use
                          when calling the microvm service. This is an alternative
                          to using the http proxy environment variables and applied
                          purely to the grpc service.
                        properties:
                          endpoint:
                            description: Endpoint is the address of the proxy.
                            type: string
                        required:
                        - endpoint
                        type: object
                      networkInterfaces:
                        description: NetworkInterfaces specifies the network interfaces
                          attached to the microvm.
                        items:
                          description: NetworkInterface represents a network interface
                            for the microvm.
                          properties:
                            address:
                              description: Address is an optional IP address to assign
                                to this interface. If not supplied then DHCP will
                                be used.
                              type: string
                            guestDeviceName:
                              description: GuestDeviceName is the name of the network
                                interface to create in the microvm.
                              type: string
                            guestMac:
                              description: GuestMAC allows the specifying of a specific
                                MAC address to use for the interface. If not supplied
                                a autogenerated MAC address will be used.
                              type: string
                            type:
                              description: Type is the type of host network interface
                                type to create to use by the guest.
                              enum:
                              - macvtap
                              - tap
                              type: string
                          required:
                          - guestDeviceName
                          - type
                          type: object
                        minItems: 1
                        type: array
                      providerID:
                        description: ProviderID is the unique identifier as specified
                          by the cloud provider. Do not supply this field as a user.
                        type: string
                      rootVolume:
                        description: RootVolume specifies the volume to use for the
                          root of the microvm.
                        properties:
                          id:
                            description: ID is a unique identifier for this volume.
                            type: string
                          image:
                            description: Image is the container image to use for the
                              volume.
                            type: string
                          readOnly:
                            default: false
                            description: ReadOnly specifies that the volume is to
                              be mounted readonly.
                            type: boolean
                        required:
                        - id
                        - image
                        type: object
                      sshPublicKeys:
                        description: SSHPublicKeys is list of SSH public keys which
                          will be added to the Microvm.
                        items:
                          properties:
                            authorizedKeys:
                              description: AuthorizedKeys is a list of public keys
                                to add to the user
                              items:
                                type: string
                              type: array
                            user:
                              description: User is the name of the user to add keys
                                for (eg root, ubuntu).
                              type: string
                          type: object
                        type: array
                      tlsSecretRef:
                        description: "TODO this needs to go and be pulled off the
                          owning object probably needs to be part of Hosts once that
                          becomes an array mTLS Configuration: \n It is recommended
                          that each flintlock host is configured with its own cert
                          signed by a common CA, and set to use mTLS. The flintlock-operator
                          should be provided with the CA, and a client cert and key
                          signed by that CA. TLSSecretRef is a reference to the name
                          of a secret which contains TLS cert information for connecting
                          to Flintlock hosts. The secret should be created in the
                          same namespace as the MicroVMCluster. The secret should
                          be of type Opaque with the addition of a ca.crt key. \n
                          apiVersion: v1 kind: Secret metadata: name: secret-tls namespace:
                          default  <- same as Cluster type: Opaque data: tls.crt:
                          | -----BEGIN CERTIFICATE----- MIIC2DCCAcCgAwIBAgIBATANBgkqh
                          ... -----END CERTIFICATE----- tls.key: | -----BEGIN EC PRIVATE
                          KEY----- MIIEpgIBAAKCAQEA7yn3bRHQ5FHMQ ... -----END EC PRIVATE
                          KEY----- ca.crt: | -----BEGIN CERTIFICATE----- MIIEpgIBAAKCAQEA7yn3bRHQ5FHMQ
                          ... -----END CERTIFICATE-----"
                        type: string
                      userdata:
                        description: "UserData is additional userdata script to execute
                          in the Microvm's cloud init. This can be in the form of
                          a raw shell script, eg: userdata: | #!/bin/bash echo \"hi
                          from my microvm\" \n or in valid cloud-config, eg: userdata:
                          | #cloud-config write_files: - content: \"hello\" path:
                          \"/root/FINDME\" owner: \"root:root\" permissions: \"0755\""
                        type: string
                      vcpu:
                        description: VCPU specifies how many vcpu's the microvm will
                          be allocated.
                        format: int64
                        minimum: 1
                        type: integer
                      volumes:
                        description: AdditionalVolumes specifies additional non-root
                          volumes to attach to the microvm.
                        items:
                          description: Volume represents a volume to be attached to
                            a microvm.
                          properties:
                            id:
                              description: ID is a unique identifier for this volume.
                              type: string
                            image:
                              description: Image is the container image to use for
                                the volume.
                              type: string
                            readOnly:
                              default: false
                              description: ReadOnly specifies that the volume is to
                                be mounted readonly.
                              type: boolean
                          required:
                          - id
                          - image
                          type: object
                        type: array
                    required:
                    - kernel
                    - memoryMb
                    - networkInterfaces
                    - rootVolume
                    - vcpu
                    type: object
                type: object
            type: object
          status:
            description: MicrovmDeploymentStatus defines the observed state of MicrovmDeployment
            properties:
              conditions:
                description: Represents the latest available observations of a deployments's
                  current state.
                items:
                  description: Condition defines an observation of a Cluster API resource
                    operational state.
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another. This should be when the underlying condition changed.
                        If that is not known, then using the time when the API field
                        changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition. This field may be empty.
                      type: string
                    reason:
                      description: The reason for the condition's last transition
                        in CamelCase. The specific API may choose whether or not this
                        field is considered a guaranteed API. This field may not be
                        empty.
                      type: string
                    severity:
                      description: Severity provides an explicit classification of
                        Reason code, so the users or machines can immediately understand
                        the current situation and act accordingly. The Severity field
                        MUST be set only when Status=False.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of condition in CamelCase or in foo.example.com/CamelCase.
                        Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important.
                      type: string
                  required:
                  - lastTransitionTime
                  - status
                  - type
                  type: object
                type: array
              ready:
                default: false
                description: Ready is true when all Replicas report ready
                type: boolean
              readyReplicas:
                description: ReadyReplicas is the number of pods targeted by this
                  ReplicaSet with a Ready Condition.
                format: int32
                type: integer
              replicas:
                description: Replicas is the most recently observed number of replicas
                  which have been created.
                format: int32
                type: integer
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
